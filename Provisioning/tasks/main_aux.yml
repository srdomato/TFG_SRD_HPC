#Hosts creados con foreman 3.4 e a installation media de Rocky -> RAM min 4096 MB

- name: Copy new Hosts file
  ansible.builtin.copy:
    src: /vagrant/Provisioning/foreman_config/hosts
    dest: /etc/hosts

- name: localectl
  ansible.builtin.command: localectl set-locale LANG=en_US.UTF-8

- name: Download Puppet 7
  ansible.builtin.command: sudo dnf -y install https://yum.puppet.com/puppet7-release-el-8.noarch.rpm

- name: Download TheForeman
  ansible.builtin.command: sudo dnf -y install https://yum.theforeman.org/releases/3.4/el8/x86_64/foreman-release.rpm

#- name: Download katello
#  ansible.builtin.command: dnf -y install https://yum.theforeman.org/katello/4.7/katello/el8/x86_64/katello-repos-latest.rpm

- name: Reset Ruby
  ansible.builtin.command: sudo dnf module reset ruby -y

- name: Enable Ruby
  ansible.builtin.command: sudo dnf -y module enable ruby:2.7

#- name: Enable postgresql
#  ansible.builtin.command: sudo dnf -y module reset  postgresql:12

#- name: Enable postgresql:12
#  ansible.builtin.command: sudo dnf -y module enable postgresql:12

#- name: Module Install postgresql:12
#  ansible.builtin.command: dnf -y module install postgresql:12

- name: Enable foreman module
  ansible.builtin.command: sudo dnf -y module enable foreman:el8

- name: Powertools
  ansible.builtin.command: dnf config-manager --set-enabled powertools

#- name: Enable katello module
#  ansible.builtin.command: dnf -y module enable katello:el8 pulpcore:el8

- name: Update Rocky 
  ansible.builtin.command: sudo dnf update -y

- name: Installing List of Packages By DNF 
  dnf:
    name: "{{ packages }}"
    state: latest
  vars:
    packages: 
      - foreman-installer
      - glibc-locale-source
      - nano
      - chrony
      - ruby
      - httpd
      - tftp-server
      - tftp
      - dhcp-server
      - syslinux
      - tree
      - vsftpd
#      - postgresql-server
#      - foreman-installer-katello
      - ruby-devel
      - rubygem-smart_proxy_discovery


- name: Set timezone to Asia/Tokyo
  community.general.timezone:
    name: Europe/Madrid

#- name: Set Timezone
#  ansible.builtin.command: sudo timedatectl set-timezone Europe/Madrid   

#- name: Set a hostname
#  ansible.builtin.hostname:
#    name: foreman.server.local

#- name: Set Hostname
#  ansible.builtin.command: sudo hostnamectl set-hostname foreman.server.local

- name: Hard Link Between Rocky and RedHat EFI
  ansible.builtin.command: sudo ln -s /boot/efi/EFI/rocky/ /boot/efi/EFI/redhat

- name: Enabling Chrony 
  ansible.builtin.command: sudo systemctl enable --now chronyd

- name: permit traffic in default zone for ftp service
  ansible.posix.firewalld:
    service: ftp
    permanent: yes
    state: enabled

- name: permit traffic in default zone for dns service
  ansible.posix.firewalld:
    service: dns
    permanent: yes
    state: enabled    

- name: permit traffic in default zone for dhcp service
  ansible.posix.firewalld:
    service: dhcp
    permanent: yes
    state: enabled     

- name: permit traffic in default zone for tftp service
  ansible.posix.firewalld:
    service: tftp
    permanent: yes
    state: enabled           

- name: Permit trafic ports TCP
  ansible.posix.firewalld:
    port: "{{ item }}/tcp"
    permanent: yes
    state: enabled 
  loop:
    - 22
    - 53
    - 80
    - 443
    - 3000
    - 8140
    - 3306
    - 5432
    - 8443
    - 5910-5930
    - 60000-60029
          
- name: Permit trafic ports UDP
  ansible.posix.firewalld:
    port: 67-69/udp
    permanent: yes
    state: enabled           

- name: Roloading Firewalld
  ansible.builtin.command: sudo firewall-cmd --reload



# Installation media: https://download.rockylinux.org/pub/rocky/$major/BaseOS/x86_64/os/

# ---------------------- Download SO Option ---------------------------------  

#- name: Download RockyLinux 8.7
#  ansible.builtin.get_url:
#    url: https://download.rockylinux.org/pub/rocky/8/isos/x86_64/Rocky-8.7-x86_64-minimal.iso
#    dest: /home/vagrant/
#
#- name:  Mount RockyLinux 8.7 on /tmp
#  ansible.builtin.command: sudo mount -t iso9660 -o loop,ro /home/vagrant/Rocky-8.7-x86_64-minimal.iso /mnt    

# ----------------------------- Config HTTP Server ----------------------------- 

#- name: Create a directory /var/www/html/pub/
#  ansible.builtin.file:
#    path: /var/www/html/pub/
#    state: directory
#    mode: '0755'  
#
#- name: Create a directory /var/www/html/pub/RockyLinux
#  ansible.builtin.file:
#    path: /var/www/html/pub/RockyLinux
#    state: directory
#    mode: '0755'     

#- name: Mount RockyLinux 8.7 on /tmp
#  ansible.posix.mount:
#    path: /mnt/
#    src: /home/vagrant/Rocky-8.7-x86_64-minimal.iso
#    fstype: iso9660
#    opts: loop,ro
#    state: present

#- name: Copying /mnt to RockyLinux folder
#  ansible.builtin.command: sudo cp -av /mnt/. /var/www/html/pub/RockyLinux


# ----------------------------- Config FTP Server ----------------------------- 

#- name: Create a directory /var/ftp/pub/pxe/RockyLinux
#  ansible.builtin.file:
#    path: /var/ftp/pub/pxe/RockyLinux
#    state: directory
#    mode: '0755'  
#
#- name: Copying /mnt to RockyLinux folder
#  ansible.builtin.command: sudo cp -prv /mnt/. /var/ftp/pub/pxe/RockyLinux/
#
#- name: Copying FTP configuration file
#  ansible.builtin.command: cp /vagrant/Provisioning/ftp_config/vsftpd.conf /etc/vsftpd/vsftpd.conf
#
#
- name: Start service vsftpd, if not started
  ansible.builtin.service:
    name: vsftpd
    state: started
    enabled: yes

- name: Start service tftp, if not started
  ansible.builtin.service:
    name: tftp
    state: started
    enabled: yes

# -----------------------------------------------------------------------------  

#- name: Unmount /mnt
#  ansible.posix.mount:
#    path: /mnt
#    state: unmounted

#- name: export LANG_ALL
#  ansible.builtin.command: export LC_ALL="en_US.UTF-8"

#- name: Setup postgresql db
#  ansible.builtin.command: sudo postgresql-setup --initdb 

#- name: Installing Foreman + Katello
#  ansible.builtin.command: sudo foreman-installer --scenario katello --tuning development --enable-foreman-proxy --enable-foreman-compute-libvirt --enable-foreman-plugin-setup --enable-foreman-proxy-plugin-discovery --enable-foreman-plugin-discovery --foreman-proxy-plugin-discovery-install-images=true

- name: Installing Foreman
  ansible.builtin.command: sudo foreman-installer --enable-foreman-proxy --enable-foreman-plugin-remote-execution --enable-foreman-proxy-plugin-remote-execution-script --enable-foreman-plugin-ansible --enable-foreman-proxy-plugin-ansible --enable-foreman-plugin-setup


- name: Configuring Username and Password
  ansible.builtin.command: sudo foreman-rake permissions:reset username=admin password=vagrant

#- name: Install hammer_cli_foreman_discovery
#  ansible.builtin.command: gem install hammer_cli_foreman_discovery